//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace Bantu.TableStorage {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TableServiceEntity", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.WindowsAzure.StorageClient")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Bantu.TableStorage.Game))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Bantu.TableStorage.Player))]
    public partial class TableServiceEntity : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string PartitionKeyField;
        
        private string RowKeyField;
        
        private System.DateTime TimestampField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartitionKey {
            get {
                return this.PartitionKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.PartitionKeyField, value) != true)) {
                    this.PartitionKeyField = value;
                    this.RaisePropertyChanged("PartitionKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RowKey {
            get {
                return this.RowKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.RowKeyField, value) != true)) {
                    this.RowKeyField = value;
                    this.RaisePropertyChanged("RowKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Game", Namespace="http://schemas.datacontract.org/2004/07/StorageService.Model")]
    public partial class Game : Bantu.TableStorage.TableServiceEntity {
        
        private string ClientField;
        
        private int Client0Field;
        
        private int Client1Field;
        
        private int Client2Field;
        
        private int Client3Field;
        
        private int Client4Field;
        
        private int Client5Field;
        
        private string HostField;
        
        private int Host0Field;
        
        private int Host1Field;
        
        private int Host2Field;
        
        private int Host3Field;
        
        private int Host4Field;
        
        private int Host5Field;
        
        private int ScoreClientField;
        
        private int ScoreHostField;
        
        private int StateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Client {
            get {
                return this.ClientField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientField, value) != true)) {
                    this.ClientField = value;
                    this.RaisePropertyChanged("Client");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Client0 {
            get {
                return this.Client0Field;
            }
            set {
                if ((this.Client0Field.Equals(value) != true)) {
                    this.Client0Field = value;
                    this.RaisePropertyChanged("Client0");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Client1 {
            get {
                return this.Client1Field;
            }
            set {
                if ((this.Client1Field.Equals(value) != true)) {
                    this.Client1Field = value;
                    this.RaisePropertyChanged("Client1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Client2 {
            get {
                return this.Client2Field;
            }
            set {
                if ((this.Client2Field.Equals(value) != true)) {
                    this.Client2Field = value;
                    this.RaisePropertyChanged("Client2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Client3 {
            get {
                return this.Client3Field;
            }
            set {
                if ((this.Client3Field.Equals(value) != true)) {
                    this.Client3Field = value;
                    this.RaisePropertyChanged("Client3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Client4 {
            get {
                return this.Client4Field;
            }
            set {
                if ((this.Client4Field.Equals(value) != true)) {
                    this.Client4Field = value;
                    this.RaisePropertyChanged("Client4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Client5 {
            get {
                return this.Client5Field;
            }
            set {
                if ((this.Client5Field.Equals(value) != true)) {
                    this.Client5Field = value;
                    this.RaisePropertyChanged("Client5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Host {
            get {
                return this.HostField;
            }
            set {
                if ((object.ReferenceEquals(this.HostField, value) != true)) {
                    this.HostField = value;
                    this.RaisePropertyChanged("Host");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Host0 {
            get {
                return this.Host0Field;
            }
            set {
                if ((this.Host0Field.Equals(value) != true)) {
                    this.Host0Field = value;
                    this.RaisePropertyChanged("Host0");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Host1 {
            get {
                return this.Host1Field;
            }
            set {
                if ((this.Host1Field.Equals(value) != true)) {
                    this.Host1Field = value;
                    this.RaisePropertyChanged("Host1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Host2 {
            get {
                return this.Host2Field;
            }
            set {
                if ((this.Host2Field.Equals(value) != true)) {
                    this.Host2Field = value;
                    this.RaisePropertyChanged("Host2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Host3 {
            get {
                return this.Host3Field;
            }
            set {
                if ((this.Host3Field.Equals(value) != true)) {
                    this.Host3Field = value;
                    this.RaisePropertyChanged("Host3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Host4 {
            get {
                return this.Host4Field;
            }
            set {
                if ((this.Host4Field.Equals(value) != true)) {
                    this.Host4Field = value;
                    this.RaisePropertyChanged("Host4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Host5 {
            get {
                return this.Host5Field;
            }
            set {
                if ((this.Host5Field.Equals(value) != true)) {
                    this.Host5Field = value;
                    this.RaisePropertyChanged("Host5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScoreClient {
            get {
                return this.ScoreClientField;
            }
            set {
                if ((this.ScoreClientField.Equals(value) != true)) {
                    this.ScoreClientField = value;
                    this.RaisePropertyChanged("ScoreClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScoreHost {
            get {
                return this.ScoreHostField;
            }
            set {
                if ((this.ScoreHostField.Equals(value) != true)) {
                    this.ScoreHostField = value;
                    this.RaisePropertyChanged("ScoreHost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Player", Namespace="http://schemas.datacontract.org/2004/07/StorageService.Model")]
    public partial class Player : Bantu.TableStorage.TableServiceEntity {
        
        private string CredentialField;
        
        private string EndpointField;
        
        private string NameField;
        
        private long ScoreField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Credential {
            get {
                return this.CredentialField;
            }
            set {
                if ((object.ReferenceEquals(this.CredentialField, value) != true)) {
                    this.CredentialField = value;
                    this.RaisePropertyChanged("Credential");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Endpoint {
            get {
                return this.EndpointField;
            }
            set {
                if ((object.ReferenceEquals(this.EndpointField, value) != true)) {
                    this.EndpointField = value;
                    this.RaisePropertyChanged("Endpoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TableStorage.IStorageService")]
    public interface IStorageService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStorageService/Reset", ReplyAction="http://tempuri.org/IStorageService/ResetResponse")]
        System.IAsyncResult BeginReset(System.AsyncCallback callback, object asyncState);
        
        void EndReset(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStorageService/CreatePlayer", ReplyAction="http://tempuri.org/IStorageService/CreatePlayerResponse")]
        System.IAsyncResult BeginCreatePlayer(string username, string credential, System.AsyncCallback callback, object asyncState);
        
        Bantu.TableStorage.Player EndCreatePlayer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStorageService/CreateGame", ReplyAction="http://tempuri.org/IStorageService/CreateGameResponse")]
        System.IAsyncResult BeginCreateGame(string host, System.AsyncCallback callback, object asyncState);
        
        Bantu.TableStorage.Game EndCreateGame(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStorageService/ValidatePlayer", ReplyAction="http://tempuri.org/IStorageService/ValidatePlayerResponse")]
        System.IAsyncResult BeginValidatePlayer(string username, string password, System.AsyncCallback callback, object asyncState);
        
        Bantu.TableStorage.Player EndValidatePlayer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStorageService/PlayerGames", ReplyAction="http://tempuri.org/IStorageService/PlayerGamesResponse")]
        System.IAsyncResult BeginPlayerGames(string username, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Bantu.TableStorage.Game> EndPlayerGames(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStorageService/GetGame", ReplyAction="http://tempuri.org/IStorageService/GetGameResponse")]
        System.IAsyncResult BeginGetGame(string gameId, System.AsyncCallback callback, object asyncState);
        
        Bantu.TableStorage.Game EndGetGame(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStorageService/UpdateGame", ReplyAction="http://tempuri.org/IStorageService/UpdateGameResponse")]
        System.IAsyncResult BeginUpdateGame(string playerId, Bantu.TableStorage.Game game, System.AsyncCallback callback, object asyncState);
        
        Bantu.TableStorage.Game EndUpdateGame(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStorageService/ScorePlayer", ReplyAction="http://tempuri.org/IStorageService/ScorePlayerResponse")]
        System.IAsyncResult BeginScorePlayer(string playerId, int addedScore, System.AsyncCallback callback, object asyncState);
        
        Bantu.TableStorage.Player EndScorePlayer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStorageService/JoinGame", ReplyAction="http://tempuri.org/IStorageService/JoinGameResponse")]
        System.IAsyncResult BeginJoinGame(string username, string gameId, System.AsyncCallback callback, object asyncState);
        
        Bantu.TableStorage.Game EndJoinGame(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStorageServiceChannel : Bantu.TableStorage.IStorageService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreatePlayerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreatePlayerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Bantu.TableStorage.Player Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Bantu.TableStorage.Player)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateGameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateGameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Bantu.TableStorage.Game Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Bantu.TableStorage.Game)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidatePlayerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ValidatePlayerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Bantu.TableStorage.Player Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Bantu.TableStorage.Player)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PlayerGamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PlayerGamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Bantu.TableStorage.Game> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Bantu.TableStorage.Game>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Bantu.TableStorage.Game Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Bantu.TableStorage.Game)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateGameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateGameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Bantu.TableStorage.Game Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Bantu.TableStorage.Game)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ScorePlayerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ScorePlayerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Bantu.TableStorage.Player Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Bantu.TableStorage.Player)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JoinGameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public JoinGameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Bantu.TableStorage.Game Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Bantu.TableStorage.Game)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StorageServiceClient : System.ServiceModel.ClientBase<Bantu.TableStorage.IStorageService>, Bantu.TableStorage.IStorageService {
        
        private BeginOperationDelegate onBeginResetDelegate;
        
        private EndOperationDelegate onEndResetDelegate;
        
        private System.Threading.SendOrPostCallback onResetCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreatePlayerDelegate;
        
        private EndOperationDelegate onEndCreatePlayerDelegate;
        
        private System.Threading.SendOrPostCallback onCreatePlayerCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateGameDelegate;
        
        private EndOperationDelegate onEndCreateGameDelegate;
        
        private System.Threading.SendOrPostCallback onCreateGameCompletedDelegate;
        
        private BeginOperationDelegate onBeginValidatePlayerDelegate;
        
        private EndOperationDelegate onEndValidatePlayerDelegate;
        
        private System.Threading.SendOrPostCallback onValidatePlayerCompletedDelegate;
        
        private BeginOperationDelegate onBeginPlayerGamesDelegate;
        
        private EndOperationDelegate onEndPlayerGamesDelegate;
        
        private System.Threading.SendOrPostCallback onPlayerGamesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGameDelegate;
        
        private EndOperationDelegate onEndGetGameDelegate;
        
        private System.Threading.SendOrPostCallback onGetGameCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateGameDelegate;
        
        private EndOperationDelegate onEndUpdateGameDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateGameCompletedDelegate;
        
        private BeginOperationDelegate onBeginScorePlayerDelegate;
        
        private EndOperationDelegate onEndScorePlayerDelegate;
        
        private System.Threading.SendOrPostCallback onScorePlayerCompletedDelegate;
        
        private BeginOperationDelegate onBeginJoinGameDelegate;
        
        private EndOperationDelegate onEndJoinGameDelegate;
        
        private System.Threading.SendOrPostCallback onJoinGameCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public StorageServiceClient() {
        }
        
        public StorageServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StorageServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StorageServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StorageServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ResetCompleted;
        
        public event System.EventHandler<CreatePlayerCompletedEventArgs> CreatePlayerCompleted;
        
        public event System.EventHandler<CreateGameCompletedEventArgs> CreateGameCompleted;
        
        public event System.EventHandler<ValidatePlayerCompletedEventArgs> ValidatePlayerCompleted;
        
        public event System.EventHandler<PlayerGamesCompletedEventArgs> PlayerGamesCompleted;
        
        public event System.EventHandler<GetGameCompletedEventArgs> GetGameCompleted;
        
        public event System.EventHandler<UpdateGameCompletedEventArgs> UpdateGameCompleted;
        
        public event System.EventHandler<ScorePlayerCompletedEventArgs> ScorePlayerCompleted;
        
        public event System.EventHandler<JoinGameCompletedEventArgs> JoinGameCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Bantu.TableStorage.IStorageService.BeginReset(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReset(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Bantu.TableStorage.IStorageService.EndReset(System.IAsyncResult result) {
            base.Channel.EndReset(result);
        }
        
        private System.IAsyncResult OnBeginReset(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Bantu.TableStorage.IStorageService)(this)).BeginReset(callback, asyncState);
        }
        
        private object[] OnEndReset(System.IAsyncResult result) {
            ((Bantu.TableStorage.IStorageService)(this)).EndReset(result);
            return null;
        }
        
        private void OnResetCompleted(object state) {
            if ((this.ResetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ResetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ResetAsync() {
            this.ResetAsync(null);
        }
        
        public void ResetAsync(object userState) {
            if ((this.onBeginResetDelegate == null)) {
                this.onBeginResetDelegate = new BeginOperationDelegate(this.OnBeginReset);
            }
            if ((this.onEndResetDelegate == null)) {
                this.onEndResetDelegate = new EndOperationDelegate(this.OnEndReset);
            }
            if ((this.onResetCompletedDelegate == null)) {
                this.onResetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnResetCompleted);
            }
            base.InvokeAsync(this.onBeginResetDelegate, null, this.onEndResetDelegate, this.onResetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Bantu.TableStorage.IStorageService.BeginCreatePlayer(string username, string credential, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreatePlayer(username, credential, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Bantu.TableStorage.Player Bantu.TableStorage.IStorageService.EndCreatePlayer(System.IAsyncResult result) {
            return base.Channel.EndCreatePlayer(result);
        }
        
        private System.IAsyncResult OnBeginCreatePlayer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string credential = ((string)(inValues[1]));
            return ((Bantu.TableStorage.IStorageService)(this)).BeginCreatePlayer(username, credential, callback, asyncState);
        }
        
        private object[] OnEndCreatePlayer(System.IAsyncResult result) {
            Bantu.TableStorage.Player retVal = ((Bantu.TableStorage.IStorageService)(this)).EndCreatePlayer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreatePlayerCompleted(object state) {
            if ((this.CreatePlayerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreatePlayerCompleted(this, new CreatePlayerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreatePlayerAsync(string username, string credential) {
            this.CreatePlayerAsync(username, credential, null);
        }
        
        public void CreatePlayerAsync(string username, string credential, object userState) {
            if ((this.onBeginCreatePlayerDelegate == null)) {
                this.onBeginCreatePlayerDelegate = new BeginOperationDelegate(this.OnBeginCreatePlayer);
            }
            if ((this.onEndCreatePlayerDelegate == null)) {
                this.onEndCreatePlayerDelegate = new EndOperationDelegate(this.OnEndCreatePlayer);
            }
            if ((this.onCreatePlayerCompletedDelegate == null)) {
                this.onCreatePlayerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreatePlayerCompleted);
            }
            base.InvokeAsync(this.onBeginCreatePlayerDelegate, new object[] {
                        username,
                        credential}, this.onEndCreatePlayerDelegate, this.onCreatePlayerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Bantu.TableStorage.IStorageService.BeginCreateGame(string host, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateGame(host, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Bantu.TableStorage.Game Bantu.TableStorage.IStorageService.EndCreateGame(System.IAsyncResult result) {
            return base.Channel.EndCreateGame(result);
        }
        
        private System.IAsyncResult OnBeginCreateGame(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string host = ((string)(inValues[0]));
            return ((Bantu.TableStorage.IStorageService)(this)).BeginCreateGame(host, callback, asyncState);
        }
        
        private object[] OnEndCreateGame(System.IAsyncResult result) {
            Bantu.TableStorage.Game retVal = ((Bantu.TableStorage.IStorageService)(this)).EndCreateGame(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateGameCompleted(object state) {
            if ((this.CreateGameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateGameCompleted(this, new CreateGameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateGameAsync(string host) {
            this.CreateGameAsync(host, null);
        }
        
        public void CreateGameAsync(string host, object userState) {
            if ((this.onBeginCreateGameDelegate == null)) {
                this.onBeginCreateGameDelegate = new BeginOperationDelegate(this.OnBeginCreateGame);
            }
            if ((this.onEndCreateGameDelegate == null)) {
                this.onEndCreateGameDelegate = new EndOperationDelegate(this.OnEndCreateGame);
            }
            if ((this.onCreateGameCompletedDelegate == null)) {
                this.onCreateGameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateGameCompleted);
            }
            base.InvokeAsync(this.onBeginCreateGameDelegate, new object[] {
                        host}, this.onEndCreateGameDelegate, this.onCreateGameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Bantu.TableStorage.IStorageService.BeginValidatePlayer(string username, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidatePlayer(username, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Bantu.TableStorage.Player Bantu.TableStorage.IStorageService.EndValidatePlayer(System.IAsyncResult result) {
            return base.Channel.EndValidatePlayer(result);
        }
        
        private System.IAsyncResult OnBeginValidatePlayer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((Bantu.TableStorage.IStorageService)(this)).BeginValidatePlayer(username, password, callback, asyncState);
        }
        
        private object[] OnEndValidatePlayer(System.IAsyncResult result) {
            Bantu.TableStorage.Player retVal = ((Bantu.TableStorage.IStorageService)(this)).EndValidatePlayer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnValidatePlayerCompleted(object state) {
            if ((this.ValidatePlayerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidatePlayerCompleted(this, new ValidatePlayerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidatePlayerAsync(string username, string password) {
            this.ValidatePlayerAsync(username, password, null);
        }
        
        public void ValidatePlayerAsync(string username, string password, object userState) {
            if ((this.onBeginValidatePlayerDelegate == null)) {
                this.onBeginValidatePlayerDelegate = new BeginOperationDelegate(this.OnBeginValidatePlayer);
            }
            if ((this.onEndValidatePlayerDelegate == null)) {
                this.onEndValidatePlayerDelegate = new EndOperationDelegate(this.OnEndValidatePlayer);
            }
            if ((this.onValidatePlayerCompletedDelegate == null)) {
                this.onValidatePlayerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidatePlayerCompleted);
            }
            base.InvokeAsync(this.onBeginValidatePlayerDelegate, new object[] {
                        username,
                        password}, this.onEndValidatePlayerDelegate, this.onValidatePlayerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Bantu.TableStorage.IStorageService.BeginPlayerGames(string username, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPlayerGames(username, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Bantu.TableStorage.Game> Bantu.TableStorage.IStorageService.EndPlayerGames(System.IAsyncResult result) {
            return base.Channel.EndPlayerGames(result);
        }
        
        private System.IAsyncResult OnBeginPlayerGames(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            return ((Bantu.TableStorage.IStorageService)(this)).BeginPlayerGames(username, callback, asyncState);
        }
        
        private object[] OnEndPlayerGames(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Bantu.TableStorage.Game> retVal = ((Bantu.TableStorage.IStorageService)(this)).EndPlayerGames(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPlayerGamesCompleted(object state) {
            if ((this.PlayerGamesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PlayerGamesCompleted(this, new PlayerGamesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PlayerGamesAsync(string username) {
            this.PlayerGamesAsync(username, null);
        }
        
        public void PlayerGamesAsync(string username, object userState) {
            if ((this.onBeginPlayerGamesDelegate == null)) {
                this.onBeginPlayerGamesDelegate = new BeginOperationDelegate(this.OnBeginPlayerGames);
            }
            if ((this.onEndPlayerGamesDelegate == null)) {
                this.onEndPlayerGamesDelegate = new EndOperationDelegate(this.OnEndPlayerGames);
            }
            if ((this.onPlayerGamesCompletedDelegate == null)) {
                this.onPlayerGamesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPlayerGamesCompleted);
            }
            base.InvokeAsync(this.onBeginPlayerGamesDelegate, new object[] {
                        username}, this.onEndPlayerGamesDelegate, this.onPlayerGamesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Bantu.TableStorage.IStorageService.BeginGetGame(string gameId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGame(gameId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Bantu.TableStorage.Game Bantu.TableStorage.IStorageService.EndGetGame(System.IAsyncResult result) {
            return base.Channel.EndGetGame(result);
        }
        
        private System.IAsyncResult OnBeginGetGame(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string gameId = ((string)(inValues[0]));
            return ((Bantu.TableStorage.IStorageService)(this)).BeginGetGame(gameId, callback, asyncState);
        }
        
        private object[] OnEndGetGame(System.IAsyncResult result) {
            Bantu.TableStorage.Game retVal = ((Bantu.TableStorage.IStorageService)(this)).EndGetGame(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGameCompleted(object state) {
            if ((this.GetGameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGameCompleted(this, new GetGameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGameAsync(string gameId) {
            this.GetGameAsync(gameId, null);
        }
        
        public void GetGameAsync(string gameId, object userState) {
            if ((this.onBeginGetGameDelegate == null)) {
                this.onBeginGetGameDelegate = new BeginOperationDelegate(this.OnBeginGetGame);
            }
            if ((this.onEndGetGameDelegate == null)) {
                this.onEndGetGameDelegate = new EndOperationDelegate(this.OnEndGetGame);
            }
            if ((this.onGetGameCompletedDelegate == null)) {
                this.onGetGameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGameCompleted);
            }
            base.InvokeAsync(this.onBeginGetGameDelegate, new object[] {
                        gameId}, this.onEndGetGameDelegate, this.onGetGameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Bantu.TableStorage.IStorageService.BeginUpdateGame(string playerId, Bantu.TableStorage.Game game, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateGame(playerId, game, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Bantu.TableStorage.Game Bantu.TableStorage.IStorageService.EndUpdateGame(System.IAsyncResult result) {
            return base.Channel.EndUpdateGame(result);
        }
        
        private System.IAsyncResult OnBeginUpdateGame(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string playerId = ((string)(inValues[0]));
            Bantu.TableStorage.Game game = ((Bantu.TableStorage.Game)(inValues[1]));
            return ((Bantu.TableStorage.IStorageService)(this)).BeginUpdateGame(playerId, game, callback, asyncState);
        }
        
        private object[] OnEndUpdateGame(System.IAsyncResult result) {
            Bantu.TableStorage.Game retVal = ((Bantu.TableStorage.IStorageService)(this)).EndUpdateGame(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateGameCompleted(object state) {
            if ((this.UpdateGameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateGameCompleted(this, new UpdateGameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateGameAsync(string playerId, Bantu.TableStorage.Game game) {
            this.UpdateGameAsync(playerId, game, null);
        }
        
        public void UpdateGameAsync(string playerId, Bantu.TableStorage.Game game, object userState) {
            if ((this.onBeginUpdateGameDelegate == null)) {
                this.onBeginUpdateGameDelegate = new BeginOperationDelegate(this.OnBeginUpdateGame);
            }
            if ((this.onEndUpdateGameDelegate == null)) {
                this.onEndUpdateGameDelegate = new EndOperationDelegate(this.OnEndUpdateGame);
            }
            if ((this.onUpdateGameCompletedDelegate == null)) {
                this.onUpdateGameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateGameCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateGameDelegate, new object[] {
                        playerId,
                        game}, this.onEndUpdateGameDelegate, this.onUpdateGameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Bantu.TableStorage.IStorageService.BeginScorePlayer(string playerId, int addedScore, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginScorePlayer(playerId, addedScore, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Bantu.TableStorage.Player Bantu.TableStorage.IStorageService.EndScorePlayer(System.IAsyncResult result) {
            return base.Channel.EndScorePlayer(result);
        }
        
        private System.IAsyncResult OnBeginScorePlayer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string playerId = ((string)(inValues[0]));
            int addedScore = ((int)(inValues[1]));
            return ((Bantu.TableStorage.IStorageService)(this)).BeginScorePlayer(playerId, addedScore, callback, asyncState);
        }
        
        private object[] OnEndScorePlayer(System.IAsyncResult result) {
            Bantu.TableStorage.Player retVal = ((Bantu.TableStorage.IStorageService)(this)).EndScorePlayer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnScorePlayerCompleted(object state) {
            if ((this.ScorePlayerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ScorePlayerCompleted(this, new ScorePlayerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ScorePlayerAsync(string playerId, int addedScore) {
            this.ScorePlayerAsync(playerId, addedScore, null);
        }
        
        public void ScorePlayerAsync(string playerId, int addedScore, object userState) {
            if ((this.onBeginScorePlayerDelegate == null)) {
                this.onBeginScorePlayerDelegate = new BeginOperationDelegate(this.OnBeginScorePlayer);
            }
            if ((this.onEndScorePlayerDelegate == null)) {
                this.onEndScorePlayerDelegate = new EndOperationDelegate(this.OnEndScorePlayer);
            }
            if ((this.onScorePlayerCompletedDelegate == null)) {
                this.onScorePlayerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnScorePlayerCompleted);
            }
            base.InvokeAsync(this.onBeginScorePlayerDelegate, new object[] {
                        playerId,
                        addedScore}, this.onEndScorePlayerDelegate, this.onScorePlayerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Bantu.TableStorage.IStorageService.BeginJoinGame(string username, string gameId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginJoinGame(username, gameId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Bantu.TableStorage.Game Bantu.TableStorage.IStorageService.EndJoinGame(System.IAsyncResult result) {
            return base.Channel.EndJoinGame(result);
        }
        
        private System.IAsyncResult OnBeginJoinGame(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string gameId = ((string)(inValues[1]));
            return ((Bantu.TableStorage.IStorageService)(this)).BeginJoinGame(username, gameId, callback, asyncState);
        }
        
        private object[] OnEndJoinGame(System.IAsyncResult result) {
            Bantu.TableStorage.Game retVal = ((Bantu.TableStorage.IStorageService)(this)).EndJoinGame(result);
            return new object[] {
                    retVal};
        }
        
        private void OnJoinGameCompleted(object state) {
            if ((this.JoinGameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.JoinGameCompleted(this, new JoinGameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void JoinGameAsync(string username, string gameId) {
            this.JoinGameAsync(username, gameId, null);
        }
        
        public void JoinGameAsync(string username, string gameId, object userState) {
            if ((this.onBeginJoinGameDelegate == null)) {
                this.onBeginJoinGameDelegate = new BeginOperationDelegate(this.OnBeginJoinGame);
            }
            if ((this.onEndJoinGameDelegate == null)) {
                this.onEndJoinGameDelegate = new EndOperationDelegate(this.OnEndJoinGame);
            }
            if ((this.onJoinGameCompletedDelegate == null)) {
                this.onJoinGameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnJoinGameCompleted);
            }
            base.InvokeAsync(this.onBeginJoinGameDelegate, new object[] {
                        username,
                        gameId}, this.onEndJoinGameDelegate, this.onJoinGameCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Bantu.TableStorage.IStorageService CreateChannel() {
            return new StorageServiceClientChannel(this);
        }
        
        private class StorageServiceClientChannel : ChannelBase<Bantu.TableStorage.IStorageService>, Bantu.TableStorage.IStorageService {
            
            public StorageServiceClientChannel(System.ServiceModel.ClientBase<Bantu.TableStorage.IStorageService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginReset(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("Reset", _args, callback, asyncState);
                return _result;
            }
            
            public void EndReset(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Reset", _args, result);
            }
            
            public System.IAsyncResult BeginCreatePlayer(string username, string credential, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = username;
                _args[1] = credential;
                System.IAsyncResult _result = base.BeginInvoke("CreatePlayer", _args, callback, asyncState);
                return _result;
            }
            
            public Bantu.TableStorage.Player EndCreatePlayer(System.IAsyncResult result) {
                object[] _args = new object[0];
                Bantu.TableStorage.Player _result = ((Bantu.TableStorage.Player)(base.EndInvoke("CreatePlayer", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateGame(string host, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = host;
                System.IAsyncResult _result = base.BeginInvoke("CreateGame", _args, callback, asyncState);
                return _result;
            }
            
            public Bantu.TableStorage.Game EndCreateGame(System.IAsyncResult result) {
                object[] _args = new object[0];
                Bantu.TableStorage.Game _result = ((Bantu.TableStorage.Game)(base.EndInvoke("CreateGame", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginValidatePlayer(string username, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = username;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("ValidatePlayer", _args, callback, asyncState);
                return _result;
            }
            
            public Bantu.TableStorage.Player EndValidatePlayer(System.IAsyncResult result) {
                object[] _args = new object[0];
                Bantu.TableStorage.Player _result = ((Bantu.TableStorage.Player)(base.EndInvoke("ValidatePlayer", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPlayerGames(string username, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = username;
                System.IAsyncResult _result = base.BeginInvoke("PlayerGames", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Bantu.TableStorage.Game> EndPlayerGames(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Bantu.TableStorage.Game> _result = ((System.Collections.ObjectModel.ObservableCollection<Bantu.TableStorage.Game>)(base.EndInvoke("PlayerGames", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetGame(string gameId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = gameId;
                System.IAsyncResult _result = base.BeginInvoke("GetGame", _args, callback, asyncState);
                return _result;
            }
            
            public Bantu.TableStorage.Game EndGetGame(System.IAsyncResult result) {
                object[] _args = new object[0];
                Bantu.TableStorage.Game _result = ((Bantu.TableStorage.Game)(base.EndInvoke("GetGame", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateGame(string playerId, Bantu.TableStorage.Game game, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = playerId;
                _args[1] = game;
                System.IAsyncResult _result = base.BeginInvoke("UpdateGame", _args, callback, asyncState);
                return _result;
            }
            
            public Bantu.TableStorage.Game EndUpdateGame(System.IAsyncResult result) {
                object[] _args = new object[0];
                Bantu.TableStorage.Game _result = ((Bantu.TableStorage.Game)(base.EndInvoke("UpdateGame", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginScorePlayer(string playerId, int addedScore, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = playerId;
                _args[1] = addedScore;
                System.IAsyncResult _result = base.BeginInvoke("ScorePlayer", _args, callback, asyncState);
                return _result;
            }
            
            public Bantu.TableStorage.Player EndScorePlayer(System.IAsyncResult result) {
                object[] _args = new object[0];
                Bantu.TableStorage.Player _result = ((Bantu.TableStorage.Player)(base.EndInvoke("ScorePlayer", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginJoinGame(string username, string gameId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = username;
                _args[1] = gameId;
                System.IAsyncResult _result = base.BeginInvoke("JoinGame", _args, callback, asyncState);
                return _result;
            }
            
            public Bantu.TableStorage.Game EndJoinGame(System.IAsyncResult result) {
                object[] _args = new object[0];
                Bantu.TableStorage.Game _result = ((Bantu.TableStorage.Game)(base.EndInvoke("JoinGame", _args, result)));
                return _result;
            }
        }
    }
}
